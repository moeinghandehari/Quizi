[versions]
agp = "8.4.2"
androidx-activityCompose = "1.9.0"
androidx-appcompat = "1.7.0"
androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.13.1"
androidx-espresso-core = "3.5.1"
androidx-lifecycle = "2.8.0"
androidx-navigation = "2.8.0-alpha02"
androidx-test-junit = "1.1.5"
coverageAggregation = "2.2.0"
kotlinx-serialization = "1.7.0"
kotlin = "2.0.0"
kotlinCoroutines = "1.9.0-RC"
compose = "2024.06.00"
compose-plugin = "1.6.20-dev1667"
detekt = "1.23.6"
detektComposeRules = "0.3.13"
exposed = "0.50.0"
firebase = "33.0.0"
firebaseCrashlyticsPlugin = "3.0.1"
firebasePerfPlugin = "1.4.2"
jacoco = "0.8.7"
junit = "4.13.2"
ksp = "2.0.0-1.0.21" # Depends on kotlin version
koin = "3.6.0-Beta4"
koin-ksp = "1.3.1"
ktor = "2.3.11"
logback = "1.5.6"
turbine = "1.1.0"
voyager = "1.0.0"
google-services = "4.4.1"
material = "1.12.0"

[libraries]
android-gradle = { module = "com.android.tools.build:gradle", version.ref = "agp" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }

coverageAggregation-gradle = { module = "io.github.gmazzo.test.aggregation:plugin", version.ref = "coverageAggregation" }

# Kotlin
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

# Kotlin Coroutines
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinCoroutines" }

kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

# Compose
# BOM version mapping: https://developer.android.com/jetpack/compose/bom/bom-mapping
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation" }
compose-runtime = { module = "androidx.compose.runtime:runtime" }
compose-material3 = { module = "androidx.compose.material3:material3" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-uiUtil = { module = "androidx.compose.ui:ui-util" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
jetbrains-compose-ui-tooling-preview = { module = "org.jetbrains.compose.ui:ui-tooling-preview", version.ref = "compose-plugin" }
androidx-ui-tooling-preview-android = { module = "androidx.compose.ui:ui-tooling-preview-android" }
androidx-ui-tooling-preview-desktop = { module = "androidx.compose.ui:ui-tooling-preview-desktop" }

# Detekt
detekt-gradle = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detekt-composeRules = { module = "io.nlopez.compose.rules:detekt", version.ref = "detektComposeRules" }

#Ksp
ksp-gradle = { module = "com.google.devtools.ksp:symbol-processing-gradle-plugin", version.ref = "ksp" }

# Ktor
ktor-bom = { module = "io.ktor:ktor-bom", version.ref = "ktor" }
ktor-core = { module = "io.ktor:ktor-client-core" }
ktor-logging = { module = "io.ktor:ktor-client-logging" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json" }
ktor-client-android = { module = "io.ktor:ktor-client-android" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin" }
ktor-client-java = { module = "io.ktor:ktor-client-java" }
ktor-client-js = { module = "io.ktor:ktor-client-js" }
ktor-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm" }
ktor-server-host-common = { module = "io.ktor:ktor-server-host-common-jvm" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation-jvm" }
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging-jvm" }

# Logback
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

# Exposed
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }

# Postgres
postgres = { module = "org.postgresql:postgresql", version = "42.7.3" }

# Koin
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core" }
koin-android = { module = "io.insert-koin:koin-android" }
koin-compose-multiplatform = { module = "io.insert-koin:koin-compose" }
koin-android-compose = { module = "io.insert-koin:koin-androidx-compose" }
koin-annotation = { module = "io.insert-koin:koin-annotations" }
koin-ktor = { module = "io.insert-koin:koin-ktor" }
koin-logger = { module = "io.insert-koin:koin-logger-slf4j" }

koin-ksp = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-ksp" }

# Turbine Testing
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

# Voyager
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager" }

# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase" }
firebase-analytics = { module = "com.google.firebase:firebase-analytics" }
firebase-crashlytics = { module = "com.google.firebase:firebase-crashlytics" }
firebase-crashlytics-gradle = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "firebaseCrashlyticsPlugin" }
firebase-perf = { module = "com.google.firebase:firebase-perf", version.ref = "firebasePerfPlugin" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
coverageAggregation = { id = "io.github.gmazzo.test.aggregation.coverage", version.ref = "coverageAggregation" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
googleServices = { id = "com.google.gms.google-services", version.ref = "google-services" }
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlyticsPlugin" }
firebase-performance = { id = "com.google.firebase.firebase-perf", version.ref = "firebasePerfPlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }

[bundles]
ktor-multiplatform = ["ktor-core", "ktor-logging", "ktor-contentNegotiation"]